(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{339:function(e,t,n){"use strict";n.r(t);var s=n(33),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"vue二-简单登录界面的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue二-简单登录界面的实现"}},[e._v("#")]),e._v(" [Vue二]:简单登录界面的实现")]),e._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_1-须知知识点"}},[e._v("1.须知知识点")])]),n("li",[n("a",{attrs:{href:"#_2-在项目中安装依赖框架"}},[e._v("2.在项目中安装依赖框架")])]),n("li",[n("a",{attrs:{href:"#_3-对登陆界面的设计"}},[e._v("3.对登陆界面的设计")])]),n("li",[n("a",{attrs:{href:"#_4-利用axios请求后端是实现登录验证"}},[e._v("4.利用axios请求后端是实现登录验证")])]),n("li",[n("a",{attrs:{href:"#_5-登录成功vue-touter实现-页面-跳转"}},[e._v("5.登录成功vue-touter实现“页面”跳转")])]),n("li",[n("a",{attrs:{href:"#_6-登录验证跳转案例小总结"}},[e._v("6.登录验证跳转案例小总结")])])])]),n("p"),e._v(" "),n("h2",{attrs:{id:"_1-须知知识点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-须知知识点"}},[e._v("#")]),e._v(" 1.须知知识点")]),e._v(" "),n("p",[e._v("1."),n("a",{attrs:{href:"https://blog.csdn.net/qq_31967985/article/details/99690802",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue项的建立及基本逻辑"),n("OutboundLink")],1),e._v("\n2."),n("a",{attrs:{href:"https://element.eleme.cn/#/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[e._v("element-ui"),n("OutboundLink")],1),e._v("基本知识--------vue的一个开源UI框架\n3."),n("a",{attrs:{href:"https://router.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-router"),n("OutboundLink")],1),e._v("基本知识--------vue实现路由跳转的框架\n4."),n("a",{attrs:{href:"https://www.kancloud.cn/yunye/axios/234845",target:"_blank",rel:"noopener noreferrer"}},[e._v("axios"),n("OutboundLink")],1),e._v("基本知识--------vue实现异步数据获取的框架\n5."),n("a",{attrs:{href:"https://blog.csdn.net/HeliumLau/article/details/70147875",target:"_blank",rel:"noopener noreferrer"}},[e._v("vuex"),n("OutboundLink")],1),e._v("基本知识---------vue状态管理的框架\n6.使用开发工具为vscode，安装插件主要为有：vetur\n"),n("strong",[e._v("7.隐藏知识点：后端用node.js实现登录请求的api和数据返回（[Vue四]：node.js后端响应请求并返回数据——以登录响应为例）")])]),e._v(" "),n("h2",{attrs:{id:"_2-在项目中安装依赖框架"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-在项目中安装依赖框架"}},[e._v("#")]),e._v(" 2.在项目中安装依赖框架")]),e._v(" "),n("p",[e._v("1.项目所需框架都是在vue项目文件夹下通过npm进行安装和添加依赖(-S 代表当前环境安装，非全局安装)\n安装element-ui")]),e._v(" "),n("blockquote",[n("p",[e._v("npm install element-ui -S")])]),e._v(" "),n("p",[e._v("安装vue-router")]),e._v(" "),n("blockquote",[n("p",[e._v("npm install vue-router -S")])]),e._v(" "),n("p",[e._v("安装axios")]),e._v(" "),n("blockquote",[n("p",[e._v("npm install axios -S")])]),e._v(" "),n("p",[e._v("安装vuex")]),e._v(" "),n("blockquote",[n("p",[e._v("npm install vuex -S")])]),e._v(" "),n("p",[e._v("查看package.json文件可以看到npm自动将所有安装的框架添加了依赖:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('  "dependencies": {\n    "axios": "^0.19.0",\n    "core-js": "^2.6.5",\n    "element-ui": "^2.11.1",\n    "vue": "^2.6.10",\n    "vue-router": "^3.1.2",\n    "vuex": "^3.1.1"\n  },\n')])])]),n("h2",{attrs:{id:"_3-对登陆界面的设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-对登陆界面的设计"}},[e._v("#")]),e._v(" 3.对登陆界面的设计")]),e._v(" "),n("p",[e._v("新建的vue项目默认打开HelloWorld.vue组件，我们删除HelloWorld.vue并且在components目录下新建Login.vue文件并调用element-ui完成登陆界面的布局设计，代码如下：\n1.在main.js中导入element-ui并创建实例")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'vue'\nimport App from './App.vue'\n//element-ui引入\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\n\nVue.config.productionTip = false\n\n//element-ui实例创建\nVue.use(ElementUI)\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n")])])]),n("p",[e._v("2.Login.vue中登陆界面设计")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<template>\n  <div>\n    <el-input placeholder="请输入账户名" v-model="usename">\n      <template slot="prepend">账号：</template>\n    </el-input>\n    <el-input placeholder="请输入密码" v-model="password">\n      <template slot="prepend">密码：</template>\n    </el-input>\n    <el-button type="primary" @click="toHome">登录</el-button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'Login\',\n  data(){\n    return{\n      usename: \'\',\n      password: \'\',\n    }\n  },\n  methods:{\n    //点击登录按钮执行访问请求并判断是否登陆\n    toHome(){\n\n    }\n  }\n}\n<\/script>\n')])])]),n("p",[e._v("界面如下：\n"),n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190818172314732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),e._v(" "),n("h2",{attrs:{id:"_4-利用axios请求后端是实现登录验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-利用axios请求后端是实现登录验证"}},[e._v("#")]),e._v(" 4.利用axios请求后端是实现登录验证")]),e._v(" "),n("p",[e._v("1.main.js中引入axios并实例化")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import axios from 'axios'\nVue.prototype.$axios = axios\n")])])]),n("p",[e._v("2.在Login.vue中的toHome（）方法中实现异步访问并获取返回的数据和token。对于get请求我们直接用axios.get就可以完成，后端也可以直接接受传递过去的参数；"),n("strong",[e._v("而对于post请求，根据请求的参数的传递类型如application/json、x-www-form-urlencoded及form-data的不同导致后端能够接受访问却无法获得post中携带的参数。因此，我们需要对post携带参数进行处理将参数序列化成URL的形式，此处需要引入qs模块并实例化")]),e._v("：\n当前目录安装")]),e._v(" "),n("blockquote",[n("p",[e._v("npm install qs -S")])]),e._v(" "),n("p",[e._v("在main.js中引入并实例化：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import qs from 'qs';\nVue.prototype.$qs = qs\n")])])]),n("p",[e._v("完善Login.vue中的Tohome（）方法：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  methods:{\n    //点击登录按钮执行访问请求并判断是否登陆\n    toHome(){\n      this.$axios({\n        method: 'post',\n        url: '/loginapp',\n        data: this.$qs.stringify({          //axios的post方法访问后端this.qs.stringify(\n          usename: this.usename,\n          password: this.password\n        }),\n      })\n      .then(res=>{                    //请求成功后执行函数\n        console.log(res)              //在浏览器后台打印返回的响应数据\n      })\n      .catch(err=>{                   //请求错误后执行函数\n        console.log(err)\n      })\n    }\n<\/script>\n")])])]),n("p",[n("strong",[e._v("3.axios访问跨域问题（重点坑）")]),e._v("\n网上关于axios跨域访问的文章很多，此处不做多解释，但是对于新手来说也不是那么容易跨过去。关于跨域问题一般有两种解决方式：一前端配置文件中设置，二后端中进行访问设置；此处就前端配置文件中解决跨域问题。\n对于vue/cli3.x版本，其叫2.x版本项目目录更加简洁，去除了2.x版本中例如config，build等文件夹，所以对3.x版本vue项目配置时要自己在根目录下新建vue.config.js作为配置文件，再在其中添加允许或者模拟跨域的配置，代码如下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.exports={\n  devServer: {\n    proxy: {\n      \"\": {\n        target: \"http://localhost:8080\",// 要访问的接口域名\n        changeOrigin: true, //开启代理：在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，这样服务端和服务端进行数据的交互就不会有跨域问题\n        pathRewrite: {\n            '^': '' //这里理解成用''代替target里面的地址\n          }\n      }\n    }\n  }  \n}\n")])])]),n("p",[e._v("4.我们在后端写死账号：admin，密码：123456，根据前端login页面的post请求返回数据如图：\n"),n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190819221132289.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}}),e._v("\n数据中'msg'为响应标识'S'代表登陆成功，相应的'F'代表登陆失败， 'token'为返回到浏览器管理用户登陆信息的令牌，此例中后端服务器将用户名和密码进行拼接然后MD5加密后返回。")]),e._v(" "),n("h2",{attrs:{id:"_5-登录成功vue-touter实现-页面-跳转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-登录成功vue-touter实现-页面-跳转"}},[e._v("#")]),e._v(" 5.登录成功vue-touter实现“页面”跳转")]),e._v(" "),n("p",[e._v("按照正常的逻辑，如果登陆成功，登陆界面将会自动跳转到home页面，而路由就是用来实现页面之间跳转的模块。vue-router实现路由跳转的步骤如下：\n1.在components文件夹下新建Home.vue组件，在此对主界面进行布局设计(简单代码下)：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<template>\n  <div>\n    <p>这是主界面</p>\n  </div>\n</template>\n\n<script>\nexport default {\n}\n<\/script>\n")])])]),n("p",[e._v("2..在src目录下新建目录router，在router目录下新建router.js作为路由管理和配置的文件。\n1）在router.js中导入Vue和vue-router模块，并实例化vue-router\n2）导入需要进行路由跳转的组件（.vue文件）\n3）对导入的组件进行路由配置：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'vue'\nimport Router from 'vue-router'\nimport Login from '../components/Login.vue'\nimport Home from '../components/Home.vue'\n\nVue.use(Router)\n\nexport default new Router({\n    routes:[\n        {\n            path: '/',\t\t\t\t//默认http://localhost:8081/#/为登录路由\n            component: Login\t\t//该路由对应的相应组件\n        },\n        {\n            path: '/home',\t\t\t//配置http://localhost:8081/#/home为主界面路由\n            component: Home\n        }\n        \n    ]\n  })\n")])])]),n("p",[e._v("3.在main.js中对建立的路由配置router.js进行导入和挂载：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport axios from 'axios'\nimport qs from 'qs';\nimport router from './router/router' \t\t\t//导入router.js\n\nVue.config.productionTip = false\nVue.use(ElementUI)\nVue.prototype.$axios = axios\nVue.prototype.$qs = qs\n\nnew Vue({\n  router,\t\t\t\t\t\t\t\t\t//挂在router\n  render: h => h(App),\n}).$mount('#app')\n")])])]),n("p",[e._v("4.在App.vue中对路由进行配置，实现对于不同组件的切换：首先import需要进行路由切换的组件分别为Login和Home，并将其注册在components中，然后再模板template中的唯一div中"),n("strong",[e._v("引入< route r-view></ router -view>元素：由vue-router提供的router容器，专门用来当占位符将路由规则匹配的组件显示在其在html中的位置")]),e._v("。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport Login from './components/Login.vue'\nimport Home from './components/Home.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    Login,\n    Home\n  }\n}\n<\/script>\n")])])]),n("p",[e._v("5、在登陆界面的toHome方法中完善功能使登录验证成功直接跳转到home界面：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("    toHome(){\n      this.$axios({\n        method: 'post',\n        url: '/loginapp',\n        data: this.$qs.stringify({          //axios的post方法访问后端this.qs.stringify(\n          usename: this.usename,\n          password: this.password\n        }), \n      })\n      .then(res=>{                    //请求成功后执行函数\n        if(res.data.msg === 'S'){\n          this.$router.push('/home')\t//登录验证成功路由实现跳转\n          this.$notify({\n            title: '提示',\n            message: '用户登录成功',\n            duration: 3000\n          });\n        }else{\n          this.$notify({\n            title: '提示',\n            message: '用户登录失败',\n            duration: 3000\n          });\n        }\n      })\n      .catch(err=>{                   //请求错误后执行函数\n        his.$notify({\n              title: '提示',\n              message: '用户访问错误',\n              duration: 3000\n            });\n        console.log(err)\n      })\n    }\n")])])]),n("p",[e._v("6.登录验证演示：\n"),n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190819233314332.gif",alt:"在这里插入图片描述"}})]),e._v(" "),n("h2",{attrs:{id:"_6-登录验证跳转案例小总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-登录验证跳转案例小总结"}},[e._v("#")]),e._v(" 6.登录验证跳转案例小总结")]),e._v(" "),n("p",[e._v("在该博客中大致完成了用户登录功能，目前为止用到了"),n("strong",[e._v("element-ui、vue-router、axios框架，同时也解决了axios跨域访问问题、axiso的post请求参数传递和接受问题")]),e._v('；但是对于一个系统来说用户信息和安全问题十分重要，如何保存用户登录状态和对前端请求进行判断和筛选都是不可避免的问题。\n在接下来的"[vue三]：用户登录状态保存和请求进行判断，vuex结合vue-router，axios实现"中将运用vuex结合axios和vue-router对当前的登录案例进行完善')]),e._v(" "),n("p",[e._v("欢迎大家关注本人的微信公众号，微信公众号将不定期发送相应学习文章和教程")]),e._v(" "),n("p",[n("strong",[n("center",[e._v("微信号：chiyizao")])],1),e._v(" "),n("center",[e._v("或者微信公众号搜索：")]),n("center",[e._v("迟亦早")]),e._v(" "),n("strong",[n("center",[e._v("二维码")])],1),e._v(" "),n("center",[n("img",{staticStyle:{height:"250px",width:"250px"},attrs:{src:"/vxgzhcode.jpg"}})])],1)])}),[],!1,null,null,null);t.default=r.exports}}]);